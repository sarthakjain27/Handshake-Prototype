const createJobPost = (req, res, pool) => {
  console.log('Inside createJobPost module:');
  console.log(req.body);
  const title = req.body.title.toLowerCase();
  const { postingDate } = req.body;
  const { deadline } = req.body;
  const city = req.body.city.toLowerCase();
  const state = req.body.cstate.toLowerCase();
  const country = req.body.country.toLowerCase();
  const { salary } = req.body;
  const { description } = req.body;
  const { category } = req.body;
  const companyId = parseInt(req.body.companyId, 10);

  const insertSQL = `INSERT INTO job_postings (job_title,posting_date,application_deadline,city,state,country,salary,job_description,job_category,company_id) VALUES ('${title}', '${postingDate}', '${deadline}', '${city}', '${state}', '${country}', '${salary}', '${description}', '${category}', '${companyId}')`;
  pool.query(insertSQL, (insertError, result) => {
    if (insertError) {
      console.log(insertError);
      console.log('Error in createJobPost');
      res.send('Error');
    }
    console.log(`Job Post titled: ${title} created in Table: job_postings with Autogenerated ID: ${result.insertId}`);
    res.send(`Job Post titled: ${title} created in Table: job_postings with Autogenerated ID: ${result.insertId}`);
  });
};

const listCompanyPostedJobs = (req, res, pool) => {
  console.log('Inside listCompanyPostedJobs module:');
  console.log(req.body);
  const companyId = parseInt(req.body.companyId, 10);
  const searchSQL = `SELECT * FROM job_postings where company_id = '${companyId}'`;
  pool.query(searchSQL, (searchError, result) => {
    if (searchError) {
      console.log(searchError);
      console.log('Error in listCompanyPostedJobs');
      res.send('Error');
    }
    res.send(result);
  });
};

const getStudentsRegisteredInAJob = (req, res, pool) => {
  console.log('Inside getStudentsRegisteredInAJob');
  console.log(req.body);
  const searchSQL = `select a.job_post_id,a.student_id,a.status,a.resume_file_url,a.jobApplicationId,a.applying_date,
                      b.student_name,b.college_name,b.date_of_birth,b.city,b.state,b.country,b.career_objective,b.contact_phone,b.contact_email,b.profile_picture_url
                      from students_applied_for_job a,student_information b
                      where a.student_id = b.student_id
                      and a.job_post_id = '${req.body.jobPostId}'`;

  pool.query(searchSQL, (searchError, searchResult) => {
    if (searchError) {
      console.log(searchError);
      console.log('Error in getStudentsRegisteredInAEvent');
      res.send('Error');
    }
    res.send(searchResult);
  });
};

const updateAppliedStudentJobStatus = (req, res, pool) => {
  console.log('updateAppliedStudentJobStatus');
  console.log(req.body);
  const updateSQL = `UPDATE students_applied_for_job SET status='${req.body.status}' where jobApplicationId='${req.body.jobApplicationId}'`;
  pool.query(updateSQL, (updateError, updateResult) => {
    if (updateError) {
      console.log(updateError);
      console.log('Error in updateAppliedStudentJobStatus');
      res.send('Error');
    }
    console.log(`Student with jobApplicationId=${req.body.jobApplicationId} Status' Updated`);
    res.send('Updated');
  });
};

const getPostedJobs = (req, res, pool) => {
  console.log('Inside getPostedJobs');
  console.log(req.body);
  let searchSQL = '';
  if (req.body.companyName && req.body.title) {
    searchSQL = `SELECT a.job_title,a.posting_date,a.application_deadline,a.city,a.state,a.country,a.salary,a.job_description,a.job_category,a.job_post_id,
                b.company_id,b.company_name,b.city as ccity, b.state as cstate, b.country as ccountry,b.description as cdescription,b.contact_phone,b.contact_email,b.profile_picture_url 
                FROM job_postings a,company_information b 
                where a.company_id = b.company_id 
                and b.company_name like '%${req.body.companyName}%'
                and a.job_title like '%${req.body.title}%'`;
  } else if (req.body.companyName) {
    searchSQL = `SELECT a.job_title,a.posting_date,a.application_deadline,a.city,a.state,a.country,a.salary,a.job_description,a.job_category,a.job_post_id,
                b.company_id,b.company_name,b.city as ccity, b.state as cstate, b.country as ccountry,b.description as cdescription,b.contact_phone,b.contact_email,b.profile_picture_url 
                FROM job_postings a,company_information b 
                where a.company_id = b.company_id 
                and b.company_name like '%${req.body.companyName}%'`;
  } else if (req.body.title) {
    searchSQL = `SELECT a.job_title,a.posting_date,a.application_deadline,a.city,a.state,a.country,a.salary,a.job_description,a.job_category,a.job_post_id,
                b.company_id,b.company_name,b.city as ccity, b.state as cstate, b.country as ccountry,b.description as cdescription,b.contact_phone,b.contact_email,b.profile_picture_url 
                FROM job_postings a,company_information b 
                where a.company_id = b.company_id 
                and a.job_title like '%${req.body.title}%'`;
  } else {
    searchSQL = `SELECT a.job_title,a.posting_date,a.application_deadline,a.city,a.state,a.country,a.salary,a.job_description,a.job_category,a.job_post_id,
                b.company_id,b.company_name,b.city as ccity, b.state as cstate, b.country as ccountry,b.description as cdescription,b.contact_phone,b.contact_email,b.profile_picture_url
                FROM job_postings a,company_information b 
                where a.company_id = b.company_id`;
  }
  pool.query(searchSQL, (searchError, result) => {
    if (searchError) {
      console.log(searchError);
      console.log('Error in getAllPostedJobs');
      res.send('Error');
    }
    res.send(result);
  });
};

const applyForJob = (req, res, pool) => {
  console.log('Inside applyForJob');
  console.log(req.body);
  if (req.file) {
    console.log('Student Resume File Uploaded');
    console.log(req.file);
  }
  const { jobPostId, studentId, date } = req.body;
  const resumeLocation = req.file.filename;
  const searchSQL = `SELECT * FROM students_applied_for_job where job_post_id='${jobPostId}' and student_id=${studentId}`;
  pool.query(searchSQL, (searchError, searchResult) => {
    if (searchError) {
      console.log(searchError);
      console.log('SearchError in applyForJob');
      res.send('Error');
    } else if (searchResult.length > 0) {
      console.log(`Already applied studentId: ${studentId} and jobPostId: ${jobPostId}`);
      res.send('Already applied');
    } else {
      const insertSQL = `INSERT INTO students_applied_for_job (job_post_id,student_id,resume_file_url,applying_date) VALUES ('${jobPostId}','${studentId}','${resumeLocation}','${date}')`;
      pool.query(insertSQL, (insertError, result) => {
        if (insertError) {
          console.log(insertError);
          console.log('InsertError in applyForJob');
          res.send('Error');
        }
        console.log(`Student with id ${studentId} successfully applied for job_post_id ${jobPostId} with autogenerated id: ${result.insertId}`);
        res.send(`Student with id ${studentId} successfully applied for job_post_id ${jobPostId} with autogenerated id: ${result.insertId}`);
      });
    }
  });
};

const getAppliedJobs = (req, res, pool) => {
  console.log('Inside getAppliedJobs');
  console.log(req.body);
  const searchSQL = `SELECT a.job_post_id,a.student_id,a.status,a.resume_file_url,a.jobApplicationId,a.applying_date,
                      b.job_title,b.posting_date,b.application_deadline,b.city,b.state,b.country,b.job_description,b.job_category,
                      c.company_id,c.company_name,c.city as ccity, c.state as cstate, c.country as ccountry,c.description as cdescription,c.contact_email,c.contact_phone,c.profile_picture_url
                      FROM students_applied_for_job a,job_postings b, company_information c
                      WHERE a.student_id='${req.body.studentId}'
                      AND a.job_post_id = b.job_post_id
                      AND b.company_id = c.company_id`;
  pool.query(searchSQL, (searchError, result) => {
    if (searchError) {
      console.log(searchError);
      console.log('SearchError in getAppliedJobs');
      res.send('Error');
    }
    res.send(result);
  });
};

exports.createJobPost = createJobPost;
exports.listCompanyPostedJobs = listCompanyPostedJobs;
exports.getPostedJobs = getPostedJobs;
exports.applyForJob = applyForJob;
exports.getAppliedJobs = getAppliedJobs;
exports.getStudentsRegisteredInAJob = getStudentsRegisteredInAJob;
exports.updateAppliedStudentJobStatus = updateAppliedStudentJobStatus;
